/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interface;

/**
 *
 * @author Lorena
 */
import Produtos.*;
import BD_Verdurao.*;
import Vendas.VendasDAO;
import Vendas.VendasService;

import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class TelaCaixa extends javax.swing.JFrame {
    DefaultTableModel listaCompras;
    private DefaultListModel<String> sugestaoNome;
    BancoDeDados bd;
    ProdutoDAO pd;
    ProdutoService ps;
    BancodeDados_vendas bdv;
    VendasService vs;
    VendasDAO vd;
    float contagemPreco = 0;
    /**
     * Creates new form Caixa
     */
    public TelaCaixa() {
        initComponents();
        list_buscarProduto.setVisible(false);
        completaJList();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setTitle("Verdurão UFCat - Caixa");
        bd = new BancoDeDados();
        bd.conectar();
        pd = new ProdutoDAO(bd);
        ps = new ProdutoService(pd);
        bdv = new BancodeDados_vendas();
        vd = new VendasDAO(bdv);
        vs = new VendasService(ps,vd);
        
        listaCompras = (DefaultTableModel) tabela_compras.getModel();//criando uma lista do formato da tabela_compras
        listaCompras.setRowCount(0);//garantindo que a listaCompras está vazia
        
        sugestaoNome = new DefaultListModel<>();//instanciando uma lista para sugestões de nomes dos produtos do BD
        list_buscarProduto.setModel(sugestaoNome);//a JList estará no mesmo formato da lista "sugestaoNome"
        
        atualizarTotal(); //inicializa o label total como 0
    }
    
    public void TabelaComprasBD(int id, String nome,float preco, String tipo, float quantidade){
         try{
             //adicionando os produtos passados no caixa na tabela de compras
            listaCompras.addRow(new Object[]{id,nome,tipo,preco*quantidade,quantidade});
          }
        catch(Exception erro){
            System.out.println(erro);
        }
    }
    
    private void atualizarTotal() {
    float total = 0;
    //somando o valor total dos produtos adicionados na tabela do caixa
    for (int i = 0; i < listaCompras.getRowCount(); i++)
        total += (Float) listaCompras.getValueAt(i, 3);//somando linha por linha
    contagemPreco = total;
    //atualiza o label_total com o valor da compra
    label_total.setText(" TOTAL: R$" + String.format("%.2f", contagemPreco));
}
    
    private void completaJList() {
        // Model da lista
        sugestaoNome = new DefaultListModel<>();
        list_buscarProduto.setModel(sugestaoNome);

        // Listener do campo de texto
        campo_nomeProduto.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
            public void insertUpdate(javax.swing.event.DocumentEvent e) {
                campo_nomeProdutoActionPerformed(null);
            }

            public void removeUpdate(javax.swing.event.DocumentEvent e) {
                campo_nomeProdutoActionPerformed(null);
            }

            public void changedUpdate(javax.swing.event.DocumentEvent e) {
                campo_nomeProdutoActionPerformed(null);
            }
        });

        // Listener da lista
        list_buscarProduto.addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                String selecionado = list_buscarProduto.getSelectedValue();
                if (selecionado != null) {
                    campo_nomeProduto.setText(selecionado);

                    // Preenche tipo
                    List<Produtos> todosProdutos = ps.dao.buscarTodos();
                    for (Produtos p : todosProdutos) {
                        if (p.getNome().equalsIgnoreCase(selecionado)) {
                            ComboBox_tipo.setSelectedItem(p.getTipo());
                            break;
                        }
                    }

                    sugestaoNome.clear();
                }
            }
        });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        label_total = new javax.swing.JLabel();
        btn_calculaTroco = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        label_tipo = new javax.swing.JLabel();
        label_produto = new javax.swing.JLabel();
        label_quantidade = new javax.swing.JLabel();
        btn_adicionarLista = new javax.swing.JButton();
        btn_removerLista = new javax.swing.JButton();
        campo_nomeProduto = new javax.swing.JTextField();
        list_buscarProduto = new javax.swing.JList<>();
        campo_quantidade = new javax.swing.JTextField();
        ComboBox_tipo = new javax.swing.JComboBox<>();
        vender = new javax.swing.JButton();
        btn_voltar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        label_titulo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela_compras = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(410, 560));

        label_total.setFont(new java.awt.Font("Trebuchet MS", 0, 36)); // NOI18N
        label_total.setText(" TOTAL: R$0,00 ");
        label_total.setToolTipText("Total a pagar");
        label_total.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        btn_calculaTroco.setBackground(new java.awt.Color(255, 255, 255));
        btn_calculaTroco.setFont(new java.awt.Font("Tw Cen MT", 0, 20)); // NOI18N
        btn_calculaTroco.setForeground(new java.awt.Color(0, 0, 0));
        btn_calculaTroco.setText("Calcular Troco");
        btn_calculaTroco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_calculaTrocoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 16, Short.MAX_VALUE)
                .addComponent(label_total, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_calculaTroco)
                .addGap(33, 33, 33))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_total, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_calculaTroco))
                .addContainerGap())
        );

        jPanel2.setPreferredSize(new java.awt.Dimension(410, 560));

        label_tipo.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        label_tipo.setText("Tipo:");

        label_produto.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        label_produto.setText("Produto:");

        label_quantidade.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        label_quantidade.setText("Quantidade (kg):");

        btn_adicionarLista.setBackground(new java.awt.Color(255, 255, 255));
        btn_adicionarLista.setFont(new java.awt.Font("Tw Cen MT", 0, 20)); // NOI18N
        btn_adicionarLista.setForeground(new java.awt.Color(0, 0, 0));
        btn_adicionarLista.setText("Adicionar à Lista");
        btn_adicionarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adicionarListaActionPerformed(evt);
            }
        });

        btn_removerLista.setBackground(new java.awt.Color(255, 255, 255));
        btn_removerLista.setFont(new java.awt.Font("Tw Cen MT", 0, 20)); // NOI18N
        btn_removerLista.setForeground(new java.awt.Color(0, 0, 0));
        btn_removerLista.setText("Remover da Lista");
        btn_removerLista.setToolTipText("");
        btn_removerLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_removerListaActionPerformed(evt);
            }
        });

        campo_nomeProduto.setBorder(null);
        campo_nomeProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo_nomeProdutoActionPerformed(evt);
            }
        });

        list_buscarProduto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        list_buscarProduto.setPreferredSize(new java.awt.Dimension(64, 22));
        list_buscarProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                list_buscarProdutoMouseClicked(evt);
            }
        });

        ComboBox_tipo.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        ComboBox_tipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Verdura", "Fruta", "Legume" }));
        ComboBox_tipo.setMaximumSize(new java.awt.Dimension(77, 32767));
        ComboBox_tipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox_tipoActionPerformed(evt);
            }
        });

        vender.setBackground(new java.awt.Color(255, 255, 255));
        vender.setFont(new java.awt.Font("Tw Cen MT", 1, 28)); // NOI18N
        vender.setForeground(new java.awt.Color(0, 0, 0));
        vender.setText("Finalizar Venda");
        vender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                venderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_adicionarLista, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_removerLista, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(list_buscarProduto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(label_produto)
                                .addGap(18, 18, 18)
                                .addComponent(campo_nomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(label_tipo)
                                .addGap(18, 18, 18)
                                .addComponent(ComboBox_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(vender, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(96, 96, 96))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(label_quantidade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(campo_quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(campo_nomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_produto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(list_buscarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboBox_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_tipo))
                .addGap(41, 41, 41)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campo_quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_quantidade))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_adicionarLista)
                    .addComponent(btn_removerLista))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(vender, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        list_buscarProduto.getAccessibleContext().setAccessibleParent(campo_nomeProduto);

        btn_voltar.setBackground(new java.awt.Color(153, 255, 153));
        btn_voltar.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        btn_voltar.setForeground(new java.awt.Color(0, 0, 0));
        btn_voltar.setText("Voltar");
        btn_voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_voltarActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        label_titulo.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        label_titulo.setForeground(new java.awt.Color(0, 0, 0));
        label_titulo.setText("CAIXA");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(label_titulo)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(label_titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tabela_compras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome do Produto", "Tipo", "Preço X Quantidade", "Quantidade (kg)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela_compras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabela_comprasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabela_compras);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(187, 187, 187)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(225, 225, 225))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 579, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_voltar))
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel1)
                        .addGap(58, 58, 58))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)))
                .addGap(58, 58, 58)
                .addComponent(btn_voltar)
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ComboBox_tipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox_tipoActionPerformed
        
    }//GEN-LAST:event_ComboBox_tipoActionPerformed

    private void btn_adicionarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adicionarListaActionPerformed
        String nome = campo_nomeProduto.getText();
        if(pd.produtoExiste(nome)){ //verifica se o item está no banco de dados pelo nome
            try {
                 if (campo_quantidade.getText().trim().isEmpty()) { //verificação se o campo está vazio
                    JOptionPane.showMessageDialog(this, "Digite a quantidade.");
                    return;
                }
                float qtd = Float.parseFloat(campo_quantidade.getText()); //verificação de quantidade
                if (qtd <= 0) {
                    JOptionPane.showMessageDialog(this, "Informe uma quantidade válida.");
                    return;
                }
                float qtdTotal = pd.obterQuantidadePorNome(nome);
                //se todos os campos forem válidos, atualiza a tabela e o label_total e adiciona um item à compra
               if(qtd<=qtdTotal){
                   String tipo = (String) ComboBox_tipo.getSelectedItem();
                   int id = pd.obterIdPorNome(nome);
                   float preco = pd.obterPrecoPorNome(nome);
                   TabelaComprasBD(id,nome.toUpperCase(), preco, tipo, qtd); //atualiza a tabela de compras
                   atualizarTotal(); //atualiza o label_total
               }
               else{
                   JOptionPane.showMessageDialog(rootPane, "Quantidade inexistente!\nQuantidade de '' "+nome+"'' em estoque: "+qtdTotal);
                   campo_quantidade.setText("");
               }   
             } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Digite apenas números no campo quantidade.");
                return;
            }     
        }
        
        else{
            JOptionPane.showMessageDialog(rootPane, "Esse produto não está cadastrado");
            campo_nomeProduto.setText("");
        }                                                
        //reseta os campos quantidade e nome ao adicionar ou não um item
        campo_quantidade.setText("");
        campo_nomeProduto.setText("");
    }//GEN-LAST:event_btn_adicionarListaActionPerformed

    private void btn_removerListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_removerListaActionPerformed
        // TODO add your handling code here:
        int click = tabela_compras.getSelectedRow(); //pega a linha selecionada da tabela
        if(click!=-1){
           float preco = Float.parseFloat(listaCompras.getValueAt(click, 3).toString()); //pega o valor do preço
           listaCompras.removeRow(click); //remove a linha da tabela
           atualizarTotal(); //atualiza o label_total
        }
        else{
            JOptionPane.showMessageDialog(null, "Nenhum item foi selecionado...\nPara isso, clique no produto que deseja excluir");
        }
    }//GEN-LAST:event_btn_removerListaActionPerformed

    private void btn_voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_voltarActionPerformed
        dispose();
    }//GEN-LAST:event_btn_voltarActionPerformed

    private void campo_nomeProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo_nomeProdutoActionPerformed
        // TODO add your handling code here:
        String letras = campo_nomeProduto.getText().trim().toUpperCase();
        sugestaoNome.clear();

        if (!letras.isEmpty()) {
            list_buscarProduto.setVisible(true);
            List<Produtos> todosProdutos = ps.dao.buscarTodos(); // pega produtos do banco
            for (Produtos p : todosProdutos) {
                if (p.getNome().toUpperCase().startsWith(letras)) {
                    sugestaoNome.addElement(p.getNome()); //adiciona a sugestão de produtos referentes à letra digitada
                }
            }
        }
        if (sugestaoNome.isEmpty()) {
            list_buscarProduto.setVisible(false);
        }
    }//GEN-LAST:event_campo_nomeProdutoActionPerformed

    private void venderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_venderActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) tabela_compras.getModel();
        int rowCount = model.getRowCount(); //obtém o número de linhas da tabela de compras

        if (rowCount == 0) {
            JOptionPane.showMessageDialog(this, "Nenhum produto na lista para vender.");
            return;
        }

        //float totalVenda = 0;

        for (int i = 0; i < rowCount; i++) {
            String nomeProduto = (String) model.getValueAt(i, 1); // Coluna 1 = Nome
            float quantidade = Float.parseFloat(model.getValueAt(i, 4).toString()); // Coluna 4 = Quantidade

            // Atualiza o estoque
            boolean vendido = ps.vender(nomeProduto, quantidade); //verifica se o produto pode ser vendido

            if (vendido) {
                // Registra no banco
                vs.registrarVenda(nomeProduto, quantidade); //registra a venda caso o produto possa ser vendido

                // Soma ao total
                //float preco = Float.parseFloat(model.getValueAt(i, 3).toString()); // Coluna 3 = Preço por kg
                //totalVenda += preco * quantidade;
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao vender produto: " + nomeProduto);
            }
    }
    model.setRowCount(0); // Limpa a tabela depois da venda
    
    // Atualiza label do total
    atualizarTotal();

    JOptionPane.showMessageDialog(this, "Venda registrada com sucesso!");
    }//GEN-LAST:event_venderActionPerformed

    private void tabela_comprasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabela_comprasMouseClicked
        // TODO add your handling code here:
        btn_removerLista.setEnabled(true);
    }//GEN-LAST:event_tabela_comprasMouseClicked

    private void list_buscarProdutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_list_buscarProdutoMouseClicked
        // TODO add your handling code here:
        list_buscarProduto.setVisible(false);
    }//GEN-LAST:event_list_buscarProdutoMouseClicked

    private void btn_calculaTrocoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_calculaTrocoActionPerformed
        // TODO add your handling code here:
        if(contagemPreco == 0){ //verifica se a lista de compras está vazia
            JOptionPane.showMessageDialog(this, "Não há nenhum valor a ser pago.");
            return;
        }
        
        String valorPagoStr = JOptionPane.showInputDialog(this, "Digite o valor pago pelo cliente:");
        if (valorPagoStr != null) {
            try {
                float valorPago = Float.parseFloat(valorPagoStr);
                if (valorPago < contagemPreco) {
                    JOptionPane.showMessageDialog(this, "Valor insuficiente.");
                } else {
                    float troco = valorPago - contagemPreco;
                    //calcula o troco e o exibe
                    JOptionPane.showMessageDialog(this, "Troco: R$ " + String.format("%.2f", troco));
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Valor inválido.");
            }
    }
    }//GEN-LAST:event_btn_calculaTrocoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCaixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCaixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCaixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCaixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCaixa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBox_tipo;
    private javax.swing.JButton btn_adicionarLista;
    private javax.swing.JButton btn_calculaTroco;
    private javax.swing.JButton btn_removerLista;
    private javax.swing.JButton btn_voltar;
    private javax.swing.JTextField campo_nomeProduto;
    private javax.swing.JTextField campo_quantidade;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_produto;
    private javax.swing.JLabel label_quantidade;
    private javax.swing.JLabel label_tipo;
    private javax.swing.JLabel label_titulo;
    private javax.swing.JLabel label_total;
    private javax.swing.JList<String> list_buscarProduto;
    private javax.swing.JTable tabela_compras;
    private javax.swing.JButton vender;
    // End of variables declaration//GEN-END:variables
}
